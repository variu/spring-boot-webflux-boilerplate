plugins {
    id 'org.springframework.boot' version '2.6.3' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'project-report'
}

allprojects {
    group = 'info.jakepark'
    version = '0.0.1'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
            vendor = JvmVendorSpec.ADOPTIUM
        }
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
//        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        modules {
            module("org.springframework.boot:spring-boot-starter-logging") {
                replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
            }
        }
        implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
//        implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.springframework.boot:spring-boot-starter-aop'
//        implementation 'io.projectreactor.addons:reactor-extra'

//        implementation 'co.elastic.logging:log4j2-ecs-layout:1.3.2'

        runtimeOnly 'io.r2dbc:r2dbc-postgresql'

        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'
    }

    test {
        useJUnitPlatform()
    }

    compileJava {
        options.compilerArgs.addAll(['-Xlint:unchecked', '-Xlint:deprecation'])
    }

    tasks.withType(Test).all {
        if (JavaVersion.current() >= JavaVersion.VERSION_13) {
            jvmArgs += [
                    "-XX:+AllowRedefinitionToAddDeleteMethods"
            ]
        }
    }
}